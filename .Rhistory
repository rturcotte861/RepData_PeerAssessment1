submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status = "passed")
failed <- mutate(failed,status = "failed")
bind_rows(passed,failed)
sat
?separate
submit()
submit()
submit()
?group_by
submit()
swirl
swirl()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now(this_day)
this_moment <- now()
this_moment
minute(this_moment)
my_date<- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989-05-17")
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
Try ymd("192012")
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(d1)
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, minutes = 34, hours = 17)
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart+hours(15)+minutes(50)
?with_tz
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008",tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
x<-rnorm(100)
y<-rnorm(100)
plot(x,y,pch=20)
par(mar = c(4,4,2,2)
)
plot(x,y,pch=20)
title("Scatterplot")
text(-2,-2,"Label")
plot(x,y,pch=20)
title("Scatterplot")
text(-2,-2,"Label")
legend("topleft",legend = "Data,pch = 20")
legend("topleft",legend = "Data",pch = 20)
plot(x,y,pch=20)
title("Scatterplot")
legend("topleft",legend = "Data",pch = 20)
fit <- lm(y,x)
fit <- lm(y~x)
abline(fit,lwd = 3)
abline(fit,lwd = 3, col = "blue")
plot(x,y,,xlab="Weight",ylab="Height",main="Scatterplot",pch=20)
legend("topright", legend = "Date",pch = 20)
z <- rpois(100,2)
par(mfrow = c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par("mar")
par(mar = c(2,2,1,1))
plot(x,y,pch=20)
plot(x,z,pch=20)
library(datasets)
install.packages("impute")
install.packages("grDevices")
install.packages("grDevices")
setwd("~/Documents/Coursera/GitLocal/RepData/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
sum( is.na(data$steps) )
sum( !is.na(data$steps) )
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
library(dplyr)
data_byDate <- group_by(data, date)
dataSummary_byDate <- summarize(data_byDate, stepsum_byDate = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate$stepsum_byDate,
main = "Histogram of the total number of steps taken each day", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
data_noNA <- merge(data, dataSummary_byInterval, by = "interval")
View(data_noNA)
View(data_noNA)
data_noNA <- select(data, steps, date, interval)
View(data_noNA)
View(data_noNA)
data_noNA <- merge(data, dataSummary_byInterval, by = "interval")
data_noNA$steps[is.na(data_noNA$steps)] <- data_noNA$stepmean_byInterval[is.na(data_noNA$steps)]
data_noNA <- select(data_noNA, steps, date, interval)
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
library(dplyr)
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
data_noNA <- merge(data, dataSummary_byInterval, by = "interval")
data_noNA$steps[is.na(data_noNA$steps)] <- data_noNA$stepmean_byInterval[is.na(data_noNA$steps)]
data_noNA <- select(data_noNA, steps, date, interval)
View(data_noNA)
ata_byDate_noNA <- group_by(data_noNA, date)
dataSummary_byDate_noNA <- summarize(data_byDate_noNA, stepsum_byDate_noNA = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate_noNA$stepsum_byDate_noNA,
main = "Histogram of the total number of steps taken each day with NA replaced", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
data_byDate_noNA <- group_by(data_noNA, date)
dataSummary_byDate_noNA <- summarize(data_byDate_noNA, stepsum_byDate_noNA = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate_noNA$stepsum_byDate_noNA,
main = "Histogram of the total number of steps taken each day with NA replaced", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
mean(dataSummary_byDate_noNA$stepsum_byDate_noNA)
median(dataSummary_byDate_noNA$stepsum_byDate_noNA)
weekdays()?
weekdays?
install.packages("timeDAte")
install.packages("timeDate")
library(timeDate)
daytypeFunc <- function(date) {
if (isWeekend(as.Date(date))) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(daytypeFunc(date)))
View(data_noNA)
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
library(dplyr)
data_byDate <- group_by(data, date)
dataSummary_byDate <- summarize(data_byDate, stepsum_byDate = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate$stepsum_byDate,
main = "Histogram of the total number of steps taken each day", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
mean(dataSummary_byDate$stepsum_byDate, na.rm = TRUE)
mean(dataSummary_byDate$stepsum_byDate, na.rm = TRUE)
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
library(timeDate)
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
library(timeDate)
daytypeFunc <- function(date) {
if (isWeekend(as.Date(date))) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data, daytype = as.factor(daytypeFunc(date)))
View(data_noNA)
summary(data_noNA)
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(daytypeFunc(date)))
View(data_noNA)
summary(data_noNA)
```
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(daytypeFunc(date)))
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
library(dplyr)
data_byDate <- group_by(data, date)
dataSummary_byDate <- summarize(data_byDate, stepsum_byDate = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate$stepsum_byDate,
main = "Histogram of the total number of steps taken each day", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
dataSummary_byInterval$interval[which.max(dataSummary_byInterval$stepmean_byInterval)]
data_noNA <- merge(data, dataSummary_byInterval, by = "interval")
data_noNA <- select(data_noNA, steps, date, interval)
data_byDate_noNA <- group_by(data_noNA, date)
dataSummary_byDate_noNA <- summarize(data_byDate_noNA, stepsum_byDate_noNA = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate_noNA$stepsum_byDate_noNA,
main = "Histogram of the total number of steps taken each day with NA replaced", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(daytypeFunc(date)))
data_byInterval_noNA <- group_by(data_noNA, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
dataSummary_byInterval_noNA <- group_by(dataSummary_byInterval_noNA, daytype)
library(ggplot2)
qplot(interval, stepmean_byInterval, data = dataSummary_byInterval_noNA,
geom = c("point", "smooth"), method = "lm",
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval") # y axis name
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
activity$daytype <- as.factor(sapply(activity$date, daytype))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(daytypeFunc(date)))
summary(data_noNA)
View(data)
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply(daytypeFunc(date)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply(daytypeFunc(date)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply(daytypeFunc(date)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply(daytypeFunc(date)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc)))
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc)))
data_byInterval_noNA <- group_by(data_noNA, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
dataSummary_byInterval_noNA <- group_by(dataSummary_byInterval_noNA, daytype)
library(ggplot2)
qplot(interval, stepmean_byInterval, data = dataSummary_byInterval_noNA,
geom = c("point", "smooth"), method = "lm",
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval") # y axis name
data <- read.csv(unz("activity.zip", "activity.csv"), nrows=17568, header=T, sep=",",
colClasses = c("numeric", "Date", "numeric"))
library(dplyr)
data_byDate <- group_by(data, date)
dataSummary_byDate <- summarize(data_byDate, stepsum_byDate = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate$stepsum_byDate,
main = "Histogram of the total number of steps taken each day", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
data_byInterval <- group_by(data, interval)
dataSummary_byInterval <- summarize(data_byInterval, stepmean_byInterval = mean(steps, na.rm = TRUE))
plot(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, # Data
type="n", # Does not produce any points
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
lines(dataSummary_byInterval$interval, dataSummary_byInterval$stepmean_byInterval, type="l")
data_noNA <- merge(data, dataSummary_byInterval, by = "interval")
data_noNA$steps[is.na(data_noNA$steps)] <- data_noNA$stepmean_byInterval[is.na(data_noNA$steps)]
```
data_noNA <- select(data_noNA, steps, date, interval)
data_byDate_noNA <- group_by(data_noNA, date)
dataSummary_byDate_noNA <- summarize(data_byDate_noNA, stepsum_byDate_noNA = sum(steps, na.rm = TRUE))
hist(dataSummary_byDate_noNA$stepsum_byDate_noNA,
main = "Histogram of the total number of steps taken each day with NA replaced", # title
xlab = "Total number of steps taken on one day", # x axis name
cex.lab=0.75, cex.axis=0.75, cex.main=0.9, # text font
breaks = 12, # Binning metric
col = "red") # Histogram color
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc)))
View(data_noNA)
data_byInterval_noNA <- group_by(data_noNA, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
data_byInterval_noNA <- group_by(data_noNA, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE), daytype = daytype)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE), daytype)
data_byInterval_noNA <- group_by(data_noNA, daytype, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
View(dataSummary_byInterval_noNA)
library(ggplot2)
qplot(interval, stepmean_byInterval, data = dataSummary_byInterval_noNA,
geom = c("point", "smooth"), method = "lm",
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval") # y axis name
xyplot(stepmean_byInterval ~ interval, groups = data_byInterval_noNA$daytype, data = data_byInterval_noNA)
library(lattice)
xyplot(stepmean_byInterval ~ interval, groups = data_byInterval_noNA$daytype, data = data_byInterval_noNA)
xyplot( data_byInterval_noNA$stepmean_byInterval ~ data_byInterval_noNA$interval, groups = data_byInterval_noNA$daytype, data = data_byInterval_noNA)
data_byInterval_noNA <- group_by(data_noNA, daytype, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
View(dataSummary_byInterval_noNA)
View(dataSummary_byInterval_noNA)
data_byInterval_noNA <- group(data_noNA, daytype, interval)
library(lubridate)
daytypeFunc <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data_noNA <- mutate(data_noNA, daytype = as.factor(sapply( date, daytypeFunc)))
data_byInterval_noNA <- group_by(data_noNA, daytype, interval)
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
dataSummary_byInterval_noNA <- summarise(data_byInterval_noNA, stepmean_byInterval = mean(steps, na.rm = TRUE))
View(dataSummary_byInterval_noNA)
View(dataSummary_byInterval_noNA)
library(lattice)
xyplot( data_byInterval_noNA$stepmean_byInterval ~ data_byInterval_noNA$interval | group, data = data_byInterval_noNA)
xyplot( data_byInterval_noNA$stepmean_byInterval ~ data_byInterval_noNA$interval | data_byInterval_noNA$daytype, data = data_byInterval_noNA)
xyplot( stepmean_byInterval ~ interval | data_byInterval_noNA$daytype, data = data_byInterval_noNA)
xyplot( data_byInterval_noNA$stepmean_byInterval ~ data_byInterval_noNA$interval | data_byInterval_noNA$daytype, data = data_byInterval_noNA, layout = c(1,2))
xyplot( dataSummary_byInterval_noNA$stepmean_byInterval ~ dataSummary_byInterval_noNA$interval | dataSummary_byInterval_noNA$daytype, data = dataSummary_byInterval_noNA, layout = c(1,2))
xyplot( dataSummary_byInterval_noNA$stepmean_byInterval ~ dataSummary_byInterval_noNA$interval | dataSummary_byInterval_noNA$daytype, data = dataSummary_byInterval_noNA, type = "l", layout = c(1,2))
library(lattice)
xyplot( dataSummary_byInterval_noNA$stepmean_byInterval ~ dataSummary_byInterval_noNA$interval | dataSummary_byInterval_noNA$daytype,
data = dataSummary_byInterval_noNA, type = "l", layout = c(1,2),
main = "Average daily activity pattern", # title
xlab = "Interval [min]", # x axis name
ylab = "Average number of steps taken during a 5 min interval", # y axis name
cex.lab=0.75, cex.axis=0.75, # text font
)
